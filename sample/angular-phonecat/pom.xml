<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<artifactId>sample</artifactId>
		<groupId>com.nabla.project.servers.sample</groupId>
		<version>1.0.1-SNAPSHOT</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<artifactId>com.nabla.project.servers.sample.javascript</artifactId>
	<name>angular-phonecat</name>
	<description>Angular phonecat</description>
	
	<properties>
		<sonar.pitest.mode>reuseReport</sonar.pitest.mode>
		<!--<sonar.sources>app/js,app/css,app/partials,test</sonar.sources>  TODO removed workaround -->
		<sonar.exclusions>node/**,node_modules/**,app/bower_components/**</sonar.exclusions> 
		<!--<sonar.language>js</sonar.language>--> <!-- NOT NEEDED anymore for Sonar 4.3 -->
		<sonar.junit.reportsPath>target/surefire-reports</sonar.junit.reportsPath>
		<sonar.javascript.lcov.reportPath>${project.build.directory}/coverage/lcov.info</sonar.javascript.lcov.reportPath>
	</properties>

	<build>
		<sourceDirectory>app</sourceDirectory>
        <testSourceDirectory>test</testSourceDirectory>
        		
		<resources>
			<!-- enable filtering on version.properties to generate build info -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/version.properties</include>
				</includes>
			</resource>
			<!-- For normal non-filtered resources exclude the release dir -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>node_modules/**</exclude>
					<exclude>app/bower_components/**</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>
		
			<!-- Build UI -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>${maven.frontend.plugin.version}</version>
				<!--
				<configuration>
					<workingDirectory>.</workingDirectory>
				</configuration>
				-->
				
				<executions>

					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v${node.version}</nodeVersion>
							<npmVersion>${npm.version}</npmVersion>
						</configuration>
					</execution>

					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>

					<execution>
						<id>grunt build</id>
						<goals>
							<goal>grunt</goal>
						</goals>
						<configuration>
							<arguments>build</arguments>
						</configuration>
					</execution>

					<execution>
						<id>javascript tests</id>
						<goals>
							<goal>karma</goal>
						</goals>
						<!-- optional: the default plase is "test". Some developers
						choose to run karma in the "integration-test" phase. -->
						<phase>test</phase>

						<configuration>
							<!-- optional: the default is "karma.conf.js" in your working directory -->
							<karmaConfPath>test/karma.conf.js</karmaConfPath>
						</configuration>
					</execution>

				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven.antrun.plugin.version}</version>
				<executions>	
                   <execution>
                        <id>lcov</id>
                        <phase>test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
								<echo message="Copying LCOV file -> lcov.info for Sonar purpose to target directory" />
                                <copy todir="${basedir}/target/coverage" flatten="true">
                                    <fileset dir="${basedir}/target">
                                        <!--<include name="karma-coverage/PhantomJS*/lcov.info" />-->
                                        <include name="karma-coverage/PhantomJS*/**/*" />
                                    </fileset>
                                </copy>

                                <path id="sourceDirectory.path">
                                  <pathelement location="${project.build.sourceDirectory}"/>
                                </path>

                                <pathconvert targetos="unix" property="relativeSourceDirectory" refid="sourceDirectory.path">
                                  <map from="${basedir}/" to=""/>
                                </pathconvert>

								<echo message="Base dir: ${basedir} " />
								<echo message="Source directory: ${project.build.sourceDirectory}" />
								<echo message="Relative source directory: ${relativeSourceDirectory}" />
								<echo message="Fixing a problem with a path to the JavaScript path" />
                                <replaceregexp byline="true">
                                    <regexp pattern="SF:\./app/(.*)" />
                                    <substitution expression="SF:/${relativeSourceDirectory}/\1" />
                                    <fileset dir="target">
                                        <include name="lcov.info" />
                                    </fileset>
                                </replaceregexp>      
                            </target>
                        </configuration>
                    </execution>					            
				</executions>	
				<dependencies>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-apache-regexp</artifactId>
						<version>${ant.version}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant</artifactId>
						<version>${ant.version}</version>
					</dependency>
				</dependencies>				
			</plugin>	
		</plugins>
	</build>
	
	<dependencies>
		<!-- test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	  
</project>
